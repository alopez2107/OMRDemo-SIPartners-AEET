/** * Copyright (C) 2013-2014 Qualcomm Life, Inc. All rights reserved. * * This software is the confidential and proprietary information of Qualcomm * Life, Inc. * * The following sample code illustrates various aspects of the 2net Mobile SDK. * * The sample code herein is provided for your convenience, and has not been * tested or designed to work on any particular system configuration. It is * provided AS IS and your use of this sample code, whether as provided or with * any modification, is at your own risk. Neither Qualcomm Life, Inc. nor any * affiliate takes any liability nor responsibility with respect to the sample * code, and disclaims all warranties, express and implied, including without * limitation warranties on merchantability, fitness for a specified purpose, * and against infringement. */package com.qcl.twonet.sampleapp;import android.os.Bundle;import android.support.v4.app.FragmentActivity;import android.util.Log;import android.view.View;import android.view.View.OnClickListener;import android.widget.TextView;import com.qcl.twonet.sampleapp.R;import java.io.BufferedReader;import java.io.IOException;import java.io.InputStream;import java.io.InputStreamReader;public class EulaActivity extends FragmentActivity {    final static String TAG = "EulaActivity";    @Override    protected void onCreate(Bundle savedInstanceState) {        super.onCreate(savedInstanceState);        setContentView(R.layout.eula_activity_layout);        TextView text = (TextView) findViewById(R.id.eula_text);        text.setText(loadEulaText());        findViewById(R.id.button_accept).setOnClickListener(new OnClickListener() {            @Override            public void onClick(View v) {                setResult(RESULT_OK);                finish();            }        });        findViewById(R.id.button_cancel).setOnClickListener(new OnClickListener() {            @Override            public void onClick(View v) {                finish();            }        });        setResult(RESULT_CANCELED);    }    String loadEulaText() {        InputStream inputStream = getResources().openRawResource(R.raw.eula);        BufferedReader br = new BufferedReader(new InputStreamReader(inputStream));        StringBuffer sb = new StringBuffer();        try {            String line;            while (null != (line = br.readLine())) {                sb.append(line + "\n");            }        } catch (IOException e) {            Log.e(TAG, "Error reading eula.txt", e);        } finally {            try {                br.close();            } catch (IOException e) {                Log.e(TAG, "Error closing resource", e);            }        }        return sb.toString();    }}